<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycom.euum.goods.mapper.GoodsMapper">

	<!-- 선민: 상품 등록 (insertGoods) -->
	<insert id="insertGoods" parameterType="com.mycom.euum.goods.bean.GoodsBean">
		<selectKey keyProperty="goodsNum" order="BEFORE" resultType="int">
			select GOODS_NUM_SEQ.nextval from dual
		</selectKey>
		insert into GOODS_TBL
		(
			GOODS_NUM,
			GOODS_CATEGORY,
			GOODS_NAME,
			GOODS_CONTENT,
			GOODS_PRICE,
			GOODS_SELLER_NICKNAME,
			GOODS_MEMBER_NUM,
			GOODS_FORMAT,
			GOODS_RESOLUTION,
			GOODS_SIZE,
			GOODS_USE,
			GOODS_MODIFY_COUNT,
			GOODS_PERIOD,
			GOODS_IMAGE1,
			GOODS_IMAGE2,
			GOODS_IMAGE3,
			GOODS_IMAGE_DATE,
			GOODS_STATUS
		)
		values
		(
			#{goodsNum},
			#{goodsCategory},
			#{goodsName},
			#{goodsContent},
			#{goodsPrice},
			#{goodsSellerNickname},
			#{goodsMemberNum},
			#{goodsFormat},
			#{goodsResolution},
			#{goodsSize},
			#{goodsUse},
			#{goodsModifyCount},
			#{goodsPeriod},
			#{goodsImage1},
			#{goodsImage2},
			#{goodsImage3},
			#{goodsImageDate},
			'승인대기'
		)
	</insert>

	
	<!-- 선민: 상품 수정 (updateGoods) -->
	<update id="updateGoods" parameterType="com.mycom.euum.goods.bean.GoodsBean">
		update GOODS_TBL
		set
			GOODS_CATEGORY = #{goodsCategory},
			GOODS_NAME = #{goodsName},
		    GOODS_CONTENT = #{goodsContent},
			GOODS_PRICE = #{goodsPrice},
			GOODS_SELLER_NICKNAME = #{goodsSellerNickname},  --없어도 될듯
			GOODS_FORMAT = #{goodsFormat},
			GOODS_RESOLUTION = #{goodsResolution},
			GOODS_SIZE = #{goodsSize},
			GOODS_USE = #{goodsUse},
			GOODS_MODIFY_COUNT = #{goodsModifyCount},
			GOODS_PERIOD = #{goodsPeriod},
			GOODS_IMAGE1 = #{goodsImage1},
			GOODS_IMAGE2 = #{goodsImage2},
			GOODS_IMAGE3 = #{goodsImage3},
			GOODS_IMAGE_DATE = #{goodsImageDate},
		    GOODS_DATE = SYSDATE
		where
			GOODS_NUM = #{goodsNum}
	</update>
	
	
	<!-- 선민: 상품 삭제 (deleteGoods) -->
	<update id="deleteGoods" parameterType="int">
	update GOODS_TBL
	set
		GOODS_STATUS = '삭제완료'
	where
		GOODS_NUM = #{goodsNum};
	</update>
	
	
	<!-- 선민: 상품추가옵션 등록 (insertGoodsOption) -->
	<insert id="insertGoodsOption" parameterType="com.mycom.euum.goods.bean.GoodsOptionBean">
		insert into GOODS_OPTION_TBL 
		(
			GOODS_NUM,
			GOODS_OPT_PRICE,
			GOODS_OPT_NAME,
			GOODS_OPT_NAME_NUM,
			GOODS_OPT_CONTENT,
			GOODS_OPT_CONTENT_NUM
		)
		values
		(
			#{goodsNum},
			#{goodsOptPrice},
			#{goodsOptName},
			#{goodsOptNameNum},
			#{goodsOptContent},
			GOODS_OPT_CONTENT_NUM_SEQ.nextval
		)
	</insert>
	
	
	<!-- 선민: 상품추가옵션 삭제 (deleteGoodsOption) -->
	<delete id="deleteGoodsOption" parameterType="int">
		delete from GOODS_OPTION_TBL
		where
			GOODS_NUM = #{goodsNum}
	</delete>
	
	
	<!-- 선민: 상품추가옵션 수정 -->
	<!-- 수정할 상품의 추가옵션을 상품번호로 찾아 (1)모두 삭제하고 (deleteGoodsOption) -->
	<!-- 새로 지정한 상품의 추가옵션을 (2)새로 등록 (insertGoodsOption) -->
	
	
	<!-- 선민: 상품 임시저장 - 최초 저장 (insertTempGoods) -->
	<insert id="insertTempGoods" parameterType="com.mycom.euum.goods.bean.GoodsBean">
		<selectKey keyProperty="goodsNum" order="BEFORE" resultType="int">
			select GOODS_NUM_SEQ.nextval from dual
		</selectKey>
		insert into GOODS_TBL
		(
			GOODS_NUM,
			GOODS_CATEGORY,
			GOODS_NAME,
			GOODS_CONTENT,
			GOODS_PRICE,
			GOODS_SELLER_NICKNAME,
			GOODS_MEMBER_NUM,
			GOODS_FORMAT,
			GOODS_RESOLUTION,
			GOODS_SIZE,
			GOODS_USE,
			GOODS_MODIFY_COUNT,
			GOODS_PERIOD,
			GOODS_IMAGE1,
			GOODS_IMAGE2,
			GOODS_IMAGE3,
			GOODS_IMAGE_DATE,
			GOODS_STATUS
		)
		values
		(
			#{goodsNum},
			#{goodsCategory},
			#{goodsName},
			#{goodsContent},
			#{goodsPrice},
			#{goodsSellerNickname},
			#{goodsMemberNum},
			#{goodsFormat},
			#{goodsResolution},
			#{goodsSize},
			#{goodsUse},
			#{goodsModifyCount},
			#{goodsPeriod},
			#{goodsImage1},
			#{goodsImage2},
			#{goodsImage3},
			#{goodsImageDate},
			'임시저장'
		)
	</insert>
	
	
	<!-- 선민: 상품 임시저장 - 중간 저장 (updateTempGoods) -->
	<update id="updateTempGoods" parameterType="com.mycom.euum.goods.bean.GoodsBean">
		update GOODS_TBL
		set
			GOODS_CATEGORY = #{goodsCategory},
			GOODS_NAME = #{goodsName},
			GOODS_CONTENT = #{goodsContent},
			GOODS_PRICE = #{goodsPrice},
			GOODS_SELLER_NICKNAME = #{goodsSellerNickname},
			GOODS_FORMAT = #{goodsFormat},
			GOODS_RESOLUTION = #{goodsResolution},
			GOODS_SIZE = #{goodsSize},
			GOODS_USE = #{goodsUse},
			GOODS_MODIFY_COUNT = #{goodsModifyCount},
			GOODS_PERIOD = #{goodsPeriod},
			GOODS_IMAGE1 = #{goodsImage1},
			GOODS_IMAGE2 = #{goodsImage2},
			GOODS_IMAGE3 = #{goodsImage3},
			GOODS_IMAGE_DATE = #{goodsImageDate}
		where 
			GOODS_NUM = #{goodsNum}
	</update>
	
	
	<!-- 선민: 상품 임시저장 - 최종 등록 (updateTempGoodsToGoods) -->
	<update id="updateTempGoodsToGoods" parameterType="com.mycom.euum.goods.bean.GoodsBean">
		update GOODS_TBL
		set
			GOODS_CATEGORY = #{goodsCategory},
			GOODS_NAME = #{goodsName},
			GOODS_CONTENT = #{goodsContent},
			GOODS_PRICE = #{goodsPrice},
			GOODS_SELLER_NICKNAME = #{goodsSellerNickname},
			GOODS_FORMAT = #{goodsFormat},
			GOODS_RESOLUTION = #{goodsResolution},
			GOODS_SIZE = #{goodsSize},
			GOODS_USE = #{goodsUse},
			GOODS_MODIFY_COUNT = #{goodsModifyCount},
			GOODS_PERIOD = #{goodsPeriod},
			GOODS_IMAGE1 = #{goodsImage1},
			GOODS_IMAGE2 = #{goodsImage2},
			GOODS_IMAGE3 = #{goodsImage3},
			GOODS_IMAGE_DATE = #{goodsImageDate},
			GOODS_STATUS = '승인대기'
		where
			GOODS_NUM = #{goodsNum}
	</update>
	
	
	<!-- 선민: 내 등록상품 리스트 가져오기 -->
	<select id="selectMyGoodsList" parameterType="int" resultType="com.mycom.euum.goods.bean.GoodsBean">
		select *
		from GOODS_TBL
		where GOODS_STATUS = '승인완료'
		and GOODS_MEMBER_NUM = #{goodsMemberNum}
		order by GOODS_NUM DESC
	</select>
	
	
	<!-- 선민: 내 등록대기상품 리스트 가져오기 -->
	<select id="selectMyUnapprovedGoodsList" parameterType="int" resultType="com.mycom.euum.goods.bean.GoodsBean">
		select *
		from GOODS_TBL
		where GOODS_STATUS = '승인대기'
		and GOODS_MEMBER_NUM = #{goodsMemberNum}
		order by GOODS_NUM DESC
	</select>
	
	
	<!-- 선민: 내 임시상품 리스트 가져오기 -->
	<select id="selectMyTempGoodsList" parameterType="int" resultType="com.mycom.euum.goods.bean.GoodsBean">
		select *
		from GOODS_TBL
		where GOODS_STATUS = '임시저장'
		and GOODS_MEMBER_NUM = #{goodsMemberNum}
		order by GOODS_NUM DESC
	</select>
	
	
	<!-- 선민: 관리자 상품 상태변경 (updateAdminGoods) -->
	<update id="updateAdminGoods" parameterType="com.mycom.euum.goods.bean.GoodsBean">
		update GOODS_TBL
		set
			GOODS_STATUS = #{goodsStatus}
		where
			GOODS_NUM = #{goodsNum}
	</update>
	
	
	<!-- 선민: 상품 리스트 가져오기 (selectGoodsList) -->
	<select id="selectGoodsList" resultType="com.mycom.euum.goods.bean.GoodsBean">
		select *
		from GOODS_TBL
		where GOODS_STATUS = '승인완료'
		order by GOODS_NUM DESC
	</select>
	
	
	<!-- 은정: 상품 리스트 검색결과 가져오기 (selectGoodsSearchList) -->
	<select id="selectGoodsSearchList" parameterType="string" resultType="com.mycom.euum.goods.bean.GoodsBean">
		select *
		from GOODS_TBL
		where GOODS_STATUS = '승인완료'
		and GOODS_NAME like '%' || #{searchKeyword} || '%' 
		order by GOODS_NUM DESC
	</select>
	
	
	<!-- 은정: 상품 리스트 정렬결과 가져오기 (selectGoodsSortList) -->
	<select id="goodsSort" parameterType="int" resultType="com.mycom.euum.goods.bean.GoodsBean">
	    select * from GOODS_TBL
		where GOODS_STATUS = '승인완료'
		
		
	    <if test="sortCom == 1">
	         order by GOODS_DATE DESC
	    </if>  
	    <if test="sortCom == 3">
	         and GOODS_USE == '상업용'
	    </if>     
	    <if test="sortCom == 4">
	         and GOODS_USE == '비상업용'
	    </if>     
	    <if test="sortCom == 5">
	         and GOODS_USE == '상업용+비상업용'
	    </if>
   </select>

	
	
	<!-- 선민: 상품 상세보기 - 상품 기본 정보 가져오기 (selectGoodsInfo) -->
	<select id="selectGoodsInfo" parameterType="String" resultType="com.mycom.euum.goods.bean.GoodsBean">
		select *
		from GOODS_TBL
		where GOODS_NUM = #{goodsNum}
	</select>
	
	
	<!-- 선민: 상품 상세보기 - 상품 추가옵션 가져오기 (selectGoodsOptionInfo) -->
	<!-- 일단 사용하지 않음 -->
	<select id="selectGoodsOptionInfo" parameterType="String" resultType="com.mycom.euum.goods.bean.GoodsOptionBean">
		select *
		from GOODS_OPTION_TBL
		where GOODS_NUM = #{goodsNum}
	</select>
	
	
	<!-- 선민: 상품 상세보기 - 상품 추가옵션 옵션명 갯수 -->
	<select id="selectGoodsOptionCount" parameterType="String" resultType="int">
		select count(distinct GOODS_OPT_NAME)
		from GOODS_OPTION_TBL
		where GOODS_NUM = #{goodsNum}
	</select>


	<!-- 선민: 상품 상세보기 - 상품 추가옵션 선택항목 리스트 꺼내오기 -->
	<select id="selectGoodsOptionContent" parameterType="String" resultType="com.mycom.euum.goods.bean.GoodsOptionBean">
		select *
		from GOODS_OPTION_TBL
		where GOODS_NUM = #{goodsNum}
		and GOODS_OPT_NAME_NUM = #{goodsOptNameNum} 
		order by GOODS_OPT_CONTENT_NUM ASC
	</select>
	
	
	<!-- 선민: 관리자 상품 리스트 가져오기 - 전체 (selectAdminGoodsList) -->
	<select id="selectAdminGoodsList" resultType="com.mycom.euum.goods.bean.GoodsBean">
		select *
		from GOODS_TBL
		order by GOODS_NUM DESC
	</select>

</mapper>